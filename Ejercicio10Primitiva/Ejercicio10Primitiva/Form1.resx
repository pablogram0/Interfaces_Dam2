<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABiAKsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        /KKKKACiiigAooooAKM80V+Vv/B2x+0H4+/Zu/YD8Ia78O/HPjHwDrU3jCC2lvvDms3Ol3E0Rt5iY3eB
        1ZkyAdpJGQOKAP1Sor+cL4N/8ErP+CpHxz+EHhTxtof7T/jQ6L4x0az1yx874raskgguYEmjDruOGCuA
        Rk4Oa6T/AIcs/wDBVz/o57xd/wCHZ1f/AOKoA/oZor+eb/hyz/wVcx/yc94u/wDDs6v/APFUn/Dlr/gq
        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
        ooooAKKKKACiiigD/9k=
</value>
  </data>
</root>